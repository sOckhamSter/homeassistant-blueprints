blueprint:
  name: GivEnergy and DFS Exporter 2023-2024
  description: Sets a forced export on a GivEnergy inverter for up to two hours at a given power output. Create one automation per inverter. This update 2023-11-15 (v01).
  domain: automation
  input:
    dfs_date:
      name: DFS Date
      description: Create a date-only helper to contain the date of the saving session. The automation will only run on this date.
      selector:
        entity:
          domain:
            - input_datetime
    dfs_start_time:
      name: DFS Start Time
      description: Create a time-only helper to contain the start time of the DFS Session
      selector:
        entity:
          domain:
            - input_datetime
    dfs_end_time:
      name: DFS End Time
      description: Create a time-only helper to contain the end time of the DFS Session
      selector:
        entity:
          domain:
            - input_datetime
    inverter_soc:
      name: Battery Inverter SOC Entity
      description: From GivTCP - sensor.givtcp_xxxxxxxxxx_soc
      selector:
        entity:
          domain: sensor
          device_class: battery
    discharge_power:
      name: Battery Discharge Power
      description: At what speed do you wish to discharge your battery? Don't forget to add on a bit for your normal background usage.
      default: 3000
      selector:
        number:
          min: 1000
          max: 6000
          step: 100
          unit_of_measurement: watts
    delay_offset_seconds:
      name: Delay Offset in Seconds
      description: Wait this many seconds after the DFS start and end times to run this automation. Avoids clashing with other automations.
      default: 0
      selector:
        number:
          min: 0
          max: 120
          step: 5
          unit_of_measurement: seconds

variables:
  dfs_date: !input dfs_date
  dfs_start_time: !input dfs_start_time
  dfs_end_time: !input dfs_end_time
  discharge_power: !input discharge_power
  inverter_soc: !input inverter_soc
  inverter_prefix: "{{ inverter_soc[6:-4] }}"
  inverter_force_export: "{{ 'select' + inverter_prefix +'_force_export' }}"
  inverter_mode: "{{ 'select' + inverter_prefix +'_mode' }}"
  inverter_discharge_rate: "{{ 'number' + inverter_prefix +'_battery_discharge_rate' }}"
  inverter_max_rate: "{{ 'sensor' + inverter_prefix +'_invertor_max_inv_rate' }}"
  delay_offset_seconds: !input delay_offset_seconds

trigger_variables:
  trigger_dfs_start_time: !input dfs_start_time
  trigger_dfs_end_time: !input dfs_end_time

trigger:
  - platform: time
    at: !input dfs_start_time
    id: start
  - platform: time
    at: !input dfs_end_time
    id: finish

condition:
  - alias: Only execute this automation on the saving session day
    condition: template
    value_template: >-
      {{ (now().date() + timedelta(days=0)) | string ==
      states(dfs_date) }}

action:
  - choose:
      - conditions:
          - condition: trigger
            id:
              - start
        sequence:
          - delay:
              seconds: "{{ delay_offset_seconds }}"
          - service: select.select_option
            data:
              option: "120"
            target:
              entity_id: '{{ inverter_force_export }}'
            alias: Force Export the Inverter for 120 minutes
          - delay:
              hours: 0
              minutes: 0
              seconds: 30
              milliseconds: 0
          - service: number.set_value
            data:
              value: "{{ discharge_power }}"
            target:
              entity_id: '{{ inverter_discharge_rate }}'
            alias: Limit Export Rate
          - delay:
              hours: 0
              minutes: 0
              seconds: 30
              milliseconds: 0
        alias: Start the export
      - conditions:
          - condition: trigger
            id:
              - finish
        sequence:
          - delay:
              seconds: "{{ delay_offset_seconds }}"
          - service: select.select_option
            data:
              option: Cancel
            target:
              entity_id: '{{ inverter_force_export }}'
            alias: Cancel Export
          - delay:
              hours: 0
              minutes: 0
              seconds: 30
              milliseconds: 0
          - service: number.set_value
            data:
              value: "{{ inverter_max_rate }}"
            target:
              entity_id: '{{ inverter_discharge_rate }}'
            alias: Reset Export Rate to maximum
          - delay:
              hours: 0
              minutes: 0
              seconds: 30
              milliseconds: 0
          - service: select.select_option
            data:
              option: Eco
            target:
              entity_id: '{{ inverter_mode }}'
            alias: Reset mode to Eco
          - delay:
              hours: 0
              minutes: 0
              seconds: 30
              milliseconds: 0
        alias: Start the export

mode: single
